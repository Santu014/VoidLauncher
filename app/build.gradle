/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3-rc-1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

apply plugin: 'java'

jar {
    manifest {
        attributes 'Main-Class': 'com.san.voidlauncher.VoidLauncher'
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url "https://raw.githubusercontent.com/tomsik68/maven-repo/master/"
    }
    maven {
        url "https://libraries.minecraft.net"
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20240303'

    implementation group: 'net.lingala.zip4j', name: 'zip4j', version: '1.3.2'

    implementation "sk.tomsik68:mclauncher-api:0.3.1"

    implementation "com.microsoft.azure:msal4j:1.10.0"
    implementation 'com.formdev:flatlaf:3.5'
    implementation 'com.mojang:authlib:1.5.25'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
    }
}

application {
    // Define the main class for the application.
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
